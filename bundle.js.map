{"version":3,"sources":["webpack:///webpack/bootstrap 169a7368b1eb8f160276","webpack:///./streetdodger.js","webpack:///./lib/game.js","webpack:///./lib/pedestrian.js","webpack:///./lib/game_view.js","webpack:///./lib/scrolling_object.js","webpack:///./lib/player.js","webpack:///./lib/dodge_zone.js","webpack:///./lib/dodge_key.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACdD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAwC,iCAAiC;AACzE,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,8BAA6B,aAAa;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpGA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA4C,YAAY;AACxD;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,uBAAsB,6BAA6B;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;ACxCA;;AAEA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 169a7368b1eb8f160276\n **/","const Game = require(\"./lib/game\");\nconst GameView = require(\"./lib/game_view\");\n\nwindow.Game = Game;\nwindow.Pedestrian = require('./lib/pedestrian');\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvas = document.getElementById(\"sdCanvas\");\n  canvas.width = Game.DIM_X;\n  canvas.height = Game.DIM_Y;\n\n  const ctx = canvas.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./streetdodger.js\n ** module id = 0\n ** module chunks = 0\n **/","// const Misc = require(\"./misc\");\nconst Pedestrian = require(\"./pedestrian\");\nconst Player = require(\"./player\");\nconst DodgeZone = require(\"./dodge_zone\");\nconst DodgeKey = require(\"./dodge_key\");\n\nclass Game {\n  constructor () {\n    this.dodgeKeys = [];\n    this.pedestrians = [];\n    this.players = [];\n    this.dodgeZone = [];\n    this.dodgeKeys = [];\n\n    this.addPlayer();\n    this.addPedestrians();\n  }\n\n  add (object) {\n    if (object instanceof Pedestrian) {\n      this.pedestrians.push(object);\n      this.dodgeKeys.push(new DodgeKey({ game: this, pedestrian: object }));\n    } else if (object instanceof Player) {\n      this.players.push(object);\n    } else if (object instanceof DodgeZone) {\n      this.dodgeZone.push(object);\n    }\n  }\n\n  addPedestrians () {\n    this.add(new Pedestrian({ game: this }));\n  }\n\n  addPlayer () {\n    const player = new Player(this);\n    this.add(player);\n    return player;\n  }\n\n  addDodgeZone () {\n    const dodgeZone = new DodgeZone(this);\n    this.add(dodgeZone);\n    return dodgeZone;\n  }\n\n  allObjects () {\n    return [].concat(\n      this.dodgeKeys,\n      this.players,\n      this.pedestrians,\n      this.dodgeZone,\n      this.dodgeKeys\n    );\n  }\n\n  draw (ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    this.allObjects().forEach((object) => {\n      object.draw(ctx);\n    });\n  }\n\n  moveObjects (delta) {\n    this.allObjects().forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  step (delta) {\n    this.moveObjects(delta);\n  }\n}\n\nGame.DIM_X = 800;\nGame.DIM_Y = 500;\nGame.BG_COLOR = \"#ccc\";\n\n// Game.prototype.draw = function (ctx) {\n//   ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n//   ctx.fillStyle = Game.BG_COLOR;\n//   ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n//\n//   drawPlayer();\n//   drawPedestrian();\n//\n//   colorDodgeWindow();\n//   drawDodgeWindow();\n//\n//   drawDodgeKey();\n//\n//   dodgeKeyIsCollidedWithWindow();\n//\n//   pedestrianX += dx;\n//   pedestrianY += dy;\n//   dodgeKeyX += dx;\n//   dodgeKeyY += dy;\n//   window.requestAnimationFrame(this.draw);\n// }\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const ScrollingObject = require('./scrolling_object');\n\nconst DEFAULTS =  {\n  COLOR: \"red\",\n};\n\nclass Pedestrian extends ScrollingObject {\n  constructor(options = {}) {\n    options.color = DEFAULTS.COLOR;\n    options.pos = options.pos || [820, 400];\n    options.speed = options.speed || -3;\n    options.width = 30;\n    options.height = 50;\n    super(options);\n  }\n\n  collideWith(otherObject) {\n    console.log(`Pedestrian collided with ${otherObject}`);\n    return true;\n  }\n}\n\nmodule.exports = Pedestrian;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/pedestrian.js\n ** module id = 2\n ** module chunks = 0\n **/","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.dodgeZone = this.game.addDodgeZone();\n    this.keyPresses = {\n      qPressed: false,\n      wPressed: false,\n      ePressed: false,\n      rPressed: false\n    };\n  }\n\n  bindKeyHandlers () {\n    document.addEventListener(\"keydown\", this.keyDownHandler.bind(this), false);\n    document.addEventListener(\"keyup\", this.keyUpHandler.bind(this), false);\n  }\n\n  start () {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate (time) {\n    const timeDelta = time - this.lastTime;\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  updateDodgeZone () {\n    let keyPressed = false;\n\n    Object.keys(this.keyPresses).forEach( (key) => {\n      if (this.keyPresses[key]) {\n        this.dodgeZone.activate();\n        keyPressed = true;\n      }\n    });\n\n    if (!keyPressed) { this.dodgeZone.deactivate(); }\n  }\n\n  keyDownHandler (e) {\n    switch (e.keyCode) {\n      case 81:\n        this.keyPresses[\"qPressed\"] = true;\n        break;\n      case 87:\n        this.keyPresses[\"wPressed\"] = true;\n        break;\n      case 69:\n        this.keyPresses[\"ePressed\"] = true;\n        break;\n      case 82:\n        this.keyPresses[\"rPressed\"] = true;\n        break;\n    }\n    this.updateDodgeZone();\n  }\n\n  keyUpHandler (e) {\n    switch (e.keyCode) {\n      case 81:\n        this.keyPresses[\"qPressed\"] = false;\n        break;\n      case 87:\n        this.keyPresses[\"wPressed\"] = false;\n        break;\n      case 69:\n        this.keyPresses[\"ePressed\"] = false;\n        break;\n      case 82:\n        this.keyPresses[\"rPressed\"] = false;\n        break;\n    }\n    this.updateDodgeZone();\n  }\n}\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 3\n ** module chunks = 0\n **/","class ScrollingObject {\n  constructor (options) {\n    this.pos = options.pos;\n    this.speed = options.speed;\n    this.width = options.width;\n    this.height = options.height;\n    this.color = options.color;\n    this.game = options.game;\n  }\n\n  collideWith (otherObject) {\n\n  }\n\n  draw (ctx) {\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], this.width, this.height);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  move() {\n    this.pos = [this.pos[0] + this.speed, this.pos[1]];\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = ScrollingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/scrolling_object.js\n ** module id = 4\n ** module chunks = 0\n **/","class Player {\n  constructor (game) {\n    this.pos = [100, 400];\n    this.game = game;\n    this.width = 30;\n    this.height = 50;\n    this.color = \"blue\";\n  }\n\n  draw (ctx) {\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], this.width, this.height);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  move () {\n    \n  }\n}\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player.js\n ** module id = 5\n ** module chunks = 0\n **/","const GameView = require('./game_view.js');\n\nclass DodgeZone {\n  constructor (game) {\n    this.game = game;\n    this.pos = [150, 50];\n    this.activated = false;\n  }\n\n  activate () {\n    this.activated = true;\n    console.log(this.activated);\n  }\n\n  deactivate () {\n    this.activated = false;\n    console.log(this.activated);\n  }\n\n  strokeColor () {\n    if (this.activated) {\n      return \"yellow\";\n    } else {\n      return \"blue\";\n    }\n  }\n\n  draw (ctx) {\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], 50, 50);\n    ctx.strokeStyle = this.strokeColor();\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  move () {\n\n  }\n}\n\nmodule.exports = DodgeZone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/dodge_zone.js\n ** module id = 6\n ** module chunks = 0\n **/","const ScrollingObject = require('./scrolling_object');\n\nclass DodgeKey extends ScrollingObject {\n  constructor(options = {}) {\n    let pedestrian = options.pedestrian;\n\n    options.color = \"green\";\n    options.pos = [pedestrian.pos[0] - 20, 50];\n    options.speed = -1.5;\n    options.width = 50;\n    options.height = 50;\n    super(options);\n  }\n}\n\nmodule.exports = DodgeKey;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/dodge_key.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}